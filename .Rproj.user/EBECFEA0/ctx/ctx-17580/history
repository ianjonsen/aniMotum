class(x)
strsplit(class(x), "_")
sapply(strsplit(class(x), "_"), function(.) .[2])
sapply(strsplit(class(x)[2], "_"), function(.) .[2])
strsplit(class(x)[2], "_")[[1]][2]
library(foieGras)
library(foieGras)
library(foieGras)
?enframe
library(foieGras)
?st_transform
library(foieGras)
tr <- sim(N = 200, model = "crw", D = 0.1, error = "kf", tdist = "reg", ts=12)
library(foieGras)
tr <- sim(N = 200, model = "crw", D = 0.1, error = "kf", tdist = "reg", ts=12)
switch(model,
crw = {
for (i in 2:N) {
v[i,] <- rtmvnorm(1, beta[b[i]] * v[i - 1,],
sigma = Sigma[[b[i]]] * dt[i],
lower = rep(-sqrt(vmax*vmax/2)*3.6,2),
upper = rep(sqrt(vmax*vmax/2)*3.6,2))
mu[i,] <- mu[i - 1,] + v[i,] * dt[i]
}
},
rw = {
mu[2, ] <- rtmvnorm(1, beta[b[2]] * (mu[1, ] - mu[1, ]),
sigma = Sigma[[b[2]]] * dt[2]^2,
lower = rep(-sqrt(vmax*vmax/2)*3.6,2),
upper = rep(sqrt(vmax*vmax/2)*3.6,2)) + mu[1, ]
for (i in 3:N) {
dxy <- rtmvnorm(1, beta[b[i]] * (mu[i - 1,] - mu[i - 2, ]),
sigma = Sigma[[b[i]]] * dt[i]^2,
lower = rep(-sqrt(vmax*vmax/2)*3.6,2),
upper = rep(sqrt(vmax*vmax/2)*3.6,2))
mu[i, ] <- mu[i - 1, ] + dxy
}
},
mpm = {
#dt.g <- dt / median(dt)
lg <- rep(NA, N)
lg[1] <- runif(1,-5, 5)
sd <- sigma_g * dt
for (i in 2:N) {
## use a truncated normal to simulate g in logit space:
##   suitable bounds keep RW wandering off at extremes
lg[i] <- rtnorm(1, lg[i-1], sd[i], l = -8, u = 8)
}
g <- plogis(lg)
mu[2,] <- rmvnorm(1, mu[1,], Sigma[[1]] * dt[2] ^ 2)
for (i in 3:N) {
dxy <- rtmvnorm(1, c(0,0), Sigma[[1]] * dt[i] ^ 2,
lower = rep(-sqrt(vmax*vmax/2)*3.6, 2),
upper = rep(sqrt(vmax*vmax/2)*3.6, 2))
mu[i, ] <- mu[i-1, ] + g[i] * (dt[i] / dt[i-1]) *
(mu[i-1,] - mu[i-2,]) + dxy
}
})
library(foieGras)
tr <- sim(N = 200, model = "crw", D = 0.1, error = "kf", tdist = "reg", ts=12)
switch(error,
ls = {
## Merge ARGOS error multiplication factors
d <- merge(d, emf(), by = "lc", all.x = TRUE)
d <- d[order(d$date), c("date", "lc", "x", "y", "emf.x", "emf.y")]
Tau <- diag(2) %o% c((tau[1] * d$emf.x)^2,
(tau[2] * d$emf.y)^2)
## Sample errors
err <- lapply(1:N, function(i)
rmvnorm(1, c(0, 0), Tau[, , i]))
err <- do.call(rbind, err)
## add errors to data.frame
d$x.err <- err[, 1]
d$y.err <- err[, 2]
d <- d[, c("date","lc","x","y","x.err","y.err")]
},
kf = {
errs <- ellp.par(d$lc)
d <- data.frame(d, errs)
})
library(foieGras)
tr <- sim(N = 200, model = "crw", D = 0.1, error = "kf", tdist = "reg", ts=12)
## add errors and transform to lon,lat - keeping true x,y
d$x1 <- with(d, x + x.err)
d$y1 <- with(d, y + y.err)
d <- st_as_sf(d, coords = c("x1", "y1"),
crs = "+proj=merc +units=km +datum=WGS84")
d <- st_transform(d, crs = 4326)
ll <- as.data.frame(st_coordinates(d))
names(ll) <- c("lon","lat")
st_geometry(d) <- NULL
d <- data.frame(d, ll)
names(d)
names(d)
names(d)[1:8]
library(foieGras)
library(foieGras)
tp <- plot(xs, what = "predicted", type = 2, pages = 1)
xs
## plot predicted value 2-D, iwthout outliers
tp <- plot(xs, what = "predicted", type = 2, pages = 1)
library(foieGras)
## plot predicted value 2-D, iwthout outliers
tp <- plot(xs, what = "predicted", type = 2, pages = 1)
ssm.lst <- split(ssm, ssm$id)
conf_poly <- lapply(ssm.lst, function(x) {
conf <- lapply(1:nrow(x), function(i)
with(x, elps(x[i], y[i], x.se[i], y.se[i], 90)))
lapply(conf, function(x)
st_multipolygon(st_polygon(list(x))))
})
library(foieGras)
## plot predicted value 2-D, iwthout outliers
tp <- plot(xs, what = "predicted", type = 2, pages = 1)
?as.POSIXct
library(foieGras)
library(foieGras)
fit <- fit_ssm(sese2, vmax = 4, model = "crw", time.step = 72)
trs <- simfit(fit, what = "predicted", reps = 2)
tmp <- cbind(tmp1, xy, ll)
tmp
names(tmp)
trs <- simfit(fit, what = "predicted", reps = 2)
library(foieGras)
trs <- simfit(fit, what = "predicted", reps = 2)
trs
fit <- fit_ssm(sese2, vmax = 4, model = "rw", time.step = 72)
trs <- simfit(fit, what = "predicted", reps = 2)
trs
fit <- fit_ssm(sese2, vmax = 4, model = "crw", time.step = 72)
trs <- simfit(fit, what = "predicted", reps = 2)
trs
?Str_detect
?str_detect
library(foieGras)
fit <- fit_ssm(sese2, vmax = 4, model = "crw", time.step = 72)
?grepl
prj <- "+proj=merc +units=m"
grepl("unit=m", prj, fixed=TRUE)
grepl("units=m", prj, fixed=TRUE)
grepl("units=km", prj, fixed=TRUE)
?str_replace
?sub
sub("units=m", "units=km", prj, fixed=TRUE)
library(foieGras)
fit <-
fit_ssm(
sese1,
model = "rw",
time.step = 24,
control = ssm_control(verbose = 0)
)
fmp <- fit_mpm(fit, what = "predicted", model = "mpm", control = mpm_control(verbose = 0))
plot(fmp, pages = 1, pal = "Zissou1", rev = TRUE)
plot(fmp, fit, pages = 1, pal = "Cividis")
devtools::document()
library(foieGras)
library(foieGras)
library(foieGras)
prefilter(sese1)
fit_ssm(sese1, vmax=5)
d.tr
names(d.tr)
sese1[1,]
names(d.tr)
library(foieGras)
fit_ssm(sese1, vmax=5)
which("id" %in% names(sese))
which("ssm" %in% names(sese))
which("ssm" %in% names(sese1))
names(sese1)
which("lc" %in% names(sese1))
which(names(sese1) %in% "lc")
?merge
?left_join
library(foieGras)
fit_ssm(sese1, vmax=5)
names(out)
tmp
foo <-
<- merge(out, tmp, by = "lc", all.x = TRUE, sort = FALSE)
foo <- merge(out, tmp, by = "lc", all.x = TRUE, sort = FALSE)
foo[1,]
out
out[1,]
foo[1,]
foo[1:5,]
out[1:5,]
library(foieGras)
fit_ssm(sese1, vmax=5)
library(foieGras)
fit_ssm(sese1, vmax=5)
names(out)
out <- out[order(out$date), c("id","date","lc","smaj","smin","eor",
"lonerr","laterr","keep","obs.type",
"emf.x","emf.y","geometry")]
out
out[1:4,]
out$emf.x <- with(out, ifelse(obs.type %in% c("KF","GLS"), NA, emf.x))
out$emf.y <- with(out, ifelse(obs.type %in% c("KF","GLS"), NA, emf.y))
wg <- which(names(out) == "geometry")
wg
nc <- ncol(out)
out[1, c(1:(wg-1),(wg+1):nc, wg)]
library(foieGras)
fit_ssm(sese1, vmax=5)
wg
wg
nc
cbind(out, out[, "geometry"])
cbind(out, out[, "geometry"])[1,]
out <- cbind(out, out[, "geometry"])
out[1,]
out <- out[, -wg]
out[1,]
library(foieGras)
library(foieGras)
fit_ssm(sese1, vmax=5)
out[1,]
out
class(out)
library(foieGras)
library(foieGras)
library(foieGras)
library(foieGras)
plot(res)
plot(res,type="acf")
plot(res,type="qq")
fit <- fit_ssm(sese, model="crw",time.step=12)
trs <- simfit(fit[1,],"p",reps=10,grad=readRDS(system.file("extdata/grad.RDS",package="foieGras")), beta=c(-400,-400))
plot(trs)
trs <- simfit(fit[1,],"p",reps=20,grad=readRDS(system.file("extdata/grad.RDS",package="foieGras")), beta=c(-400,-400))
plot(trs)
trs <- simfit(fit[1,],"p",reps=50,grad=readRDS(system.file("extdata/grad.RDS",package="foieGras")), beta=c(-400,-400))
plot(trs)
trs <- simfit(fit[1,],"p",reps=100)
plot(trs)
plot(trs,"p")
library(foieGras)
set.seed(pi)
smpm <- sim(N=300, model="mpm", sigma_g=1.1, sigma=c(10,10))
fit <- fit_ssm(data=smpm %>% mutate(id=1) %>% select(id,date,lc,lon,lat), vmax=4,model="crw",time.step=3)
fit <- fit_ssm(smpm %>% mutate(id=1) %>% select(id,date,lc,lon,lat), vmax=4,model="crw",time.step=3)
library(tidyverse)
fit <- fit_ssm(smpm %>% mutate(id=1) %>% select(id,date,lc,lon,lat), vmax=4,model="crw",time.step=3)
smpm %>% mutate(id = 1) %>% select(id,date,lc,lon,lat)
foo <- smpm %>% mutate(id = 1) %>% select(id,date,lc,lon,lat)
class(foo)
unclass(foo)
as.data.frame(foo)
foo <- as.data.frame(foo)
class(foo)
foo[1,]
fit <- fit_ssm(foo, vmax=4, model="crw",time.step=3)
fit
plot(fit)
plot(fit, type=2, ask=F)
loc <- grab(fit, "f",as_sf=FALSE)
loc
plot(lat ~ lon, loc)
plot(lat ~ lon, loc,type='b')
plot(y ~ x, loc, type='b')
points(y ~x, smpm, pch=19,cex=0.4,col='red')
plot(lat ~ lon, smpm,type='b')
points(lat ~ lon, loc,pch=19,col='red')
smpm <- sim(N=300, model="mpm", sigma_g=1.1, sigma=c(20,20), rho_p=0.4, error="kf")
plot(smpm)
smpm <- sim(N=300, model="mpm", sigma_g=1.1, sigma=c(12,12), rho_p=0.4, error="kf")
plot(smpm)
smpm <- sim(N=300, model="mpm", sigma_g=1.1, sigma=c(12,12), rho_p=0.4, error="kf")
plot(smpm)
smpm <- sim(N=300, model="mpm", sigma_g=1.1, sigma=c(12,12), rho_p=0.4, error="kf")
plot(smpm)
smpm
plot(g ~date, smpm)
plot(g ~date, smpm,type='b')
plot(g ~date, smpm,type='l')
smpm <- sim(N=300, model="mpm", sigma_g=1.5, sigma=c(12,12), rho_p=0.4, error="kf")
plot(g ~date, smpm,type='l')
smpm <- sim(N=300, model="mpm", sigma_g=0.5, sigma=c(12,12), rho_p=0.4, error="kf")
plot(g ~date, smpm,type='l')
smpm <- sim(N=300, model="mpm", sigma_g=0.25, sigma=c(12,12), rho_p=0.4, error="kf")
plot(g ~date, smpm,type='l')
smpm <- sim(N=300, model="mpm", sigma_g=0.5, sigma=c(12,12), rho_p=0.4, error="kf")
plot(g ~date, smpm,type='l')
?sim
smpm <- sim(N=300, ts=12, model="mpm", sigma_g=0.5, sigma=c(12,12), rho_p=0.4, error="kf")
warnings()
smpm <- sim(N=300, ts=12, model="mpm", sigma_g=0.5, sigma=c(10,10), rho_p=0.4, error="kf")
smpm <- sim(N=300, ts=12, model="mpm", sigma_g=0.5, sigma=c(4,4), rho_p=0.4, error="kf")
smpm <- sim(N=300, ts=12, model="mpm", sigma_g=0.5, sigma=c(6,6), rho_p=0.4, error="kf")
plot(g ~date, smpm,type='l')
smpm <- sim(N=300, ts=12, model="mpm", sigma_g=0.25, sigma=c(6,6), rho_p=0.4, error="kf")
plot(g ~date, smpm,type='l')
smpm <- sim(N=300, ts=12, model="mpm", sigma_g=0.15, sigma=c(6,6), rho_p=0.4, error="kf")
plot(g ~date, smpm,type='l')
plot(smpm)
plot(smpm,pal="Cividis")
plot(lat ~ lon, smpm)
plot(lat ~ lon, smpm,type='b')
smpm <- sim(N=300, ts=12, model="mpm", sigma_g=0.15, sigma=c(10,10), rho_p=0.4, error="kf")
plot(lat ~ lon, smpm,type='b')
smpm <- sim(N=300, ts=12, model="mpm", sigma_g=0.15, sigma=c(10,10), rho_p=0.67, error="kf")
plot(lat ~ lon, smpm,type='b')
plot(y ~ x, smpm,type='b')
smpm <- sim(N=300, ts=12, model="mpm", sigma_g=0.15, sigma=c(8,6), rho_p=0.67, error="kf")
smpm <- sim(N=300, ts=12, model="mpm", sigma_g=0.15, sigma=c(7,6), rho_p=0.67, error="kf")
plot(y ~ x, smpm,type='b')
plot(smpm)
plot(smpm,pal="Cividis")
smpm <- sim(N=300, ts=12, model="mpm", sigma_g=0.15, sigma=c(7,6), rho_p=0.67, error="kf")
plot(smpm,pal="Cividis")
smpm <- sim(N=300, ts=12, model="mpm", sigma_g=0.15, sigma=c(7,6), rho_p=0.67, error="kf")
plot(smpm,pal="Cividis")
smpm <- sim(N=300, ts=12, model="mpm", sigma_g=0.15, sigma=c(7,6), rho_p=0.67, error="kf")
plot(smpm,pal="Cividis")
smpm <- sim(N=300, ts=12, model="mpm", sigma_g=0.15, sigma=c(7,6), rho_p=0.67, error="kf")
plot(smpm,pal="Cividis")
plot(g ~ date, smpm)
plot(g ~ date, smpm,type='l')
smpm
plot(lat ~ lon, smpm)
plot(lat ~ lon, smpm type='b',cex=0.4)
plot(lat ~ lon, smpm, type='b',cex=0.4)
smpm <- sim(N=300, ts=12, model="mpm", sigma_g=0.15, sigma=c(5,3), rho_p=0.67, error="kf")
plot(lat ~ lon, smpm, type='b',cex=0.4)
smpm <- sim(N=300, ts=6, model="mpm", sigma_g=0.15, sigma=c(5,3), rho_p=0.67, error="kf")
plot(lat ~ lon, smpm, type='b',cex=0.4)
plot(smpm)
plot(lat ~ lon, smpm, type='b',cex=0.4)
smpm <- sim(N=300, ts=6, model="mpm", sigma_g=0.15, sigma=c(5,3), rho_p=0.67, error="kf")
plot(smpm)
smpm <- sim(N=300, ts=6, model="mpm", sigma_g=0.15, sigma=c(5,3), rho_p=0.67, error="kf")
plot(smpm)
plot(smpm,pal="Cividis")
smpm <- sim(N=300, ts=6, model="mpm", sigma_g=0.15, sigma=c(5,3), rho_p=0.67, error="kf")
plot(smpm,pal="Cividis")
smpm <- sim(N=300, ts=6, model="mpm", sigma_g=0.15, sigma=c(5,3), rho_p=0.67, error="kf")
plot(smpm,pal="Cividis")
smpm <- sim(N=300, ts=6, model="mpm", sigma_g=0.15, sigma=c(5,3), rho_p=0.67, error="kf")
plot(smpm,pal="Cividis")
smpm <- sim(N=300, ts=6, model="mpm", sigma_g=0.15, sigma=c(5,3), rho_p=0.67, error="kf")
plot(smpm,pal="Cividis")
smpm <- sim(N=300, ts=6, model="mpm", sigma_g=0.15, sigma=c(5,3), rho_p=0.67, error="kf")
plot(smpm,pal="Cividis")
smpm <- sim(N=300, ts=6, model="mpm", sigma_g=0.15, sigma=c(5,3), rho_p=0.67, error="kf")
plot(smpm,pal="Cividis")
smpm <- sim(N=300, ts=6, model="mpm", sigma_g=0.15, sigma=c(5,3), rho_p=0.67, error="kf")
plot(smpm,pal="Cividis")
smpm <- sim(N=300, ts=6, model="mpm", sigma_g=0.15, sigma=c(5,3), rho_p=0.67, error="kf")
plot(smpm,pal="Cividis")
smpm <- sim(N=300, ts=6, model="mpm", sigma_g=0.15, sigma=c(5,3), rho_p=0.67, error="kf")
plot(smpm,pal="Cividis")
smpm <- sim(N=300, ts=6, model="mpm", sigma_g=0.15, sigma=c(5,3), rho_p=0.67, error="kf")
plot(smpm,pal="Cividis")
smpm <- sim(N=300, ts=6, model="mpm", sigma_g=0.25, sigma=c(5,3), rho_p=0.67, error="kf")
plot(smpm,pal="Cividis")
smpm <- sim(N=300, ts=6, model="mpm", sigma_g=0.25, sigma=c(5,3), rho_p=0.67, error="kf")
plot(smpm,pal="Cividis")
smpm <- sim(N=300, ts=6, model="mpm", sigma_g=0.25, sigma=c(5,3), rho_p=0.67, error="kf")
plot(smpm,pal="Cividis")
smpm <- sim(N=300, ts=6, model="mpm", sigma_g=0.25, sigma=c(5,3), rho_p=0.67, error="kf")
plot(smpm,pal="Cividis")
plot(lat ~ lon, smpm, type='b')
smpm.dat <- smpm %>% mutate(id=1) %>% select(id,date,lc,lon,lat,smaj,smin,eor)
smpm.dat
class(smpm.dat)
smpm.dat <- as_tibble(smpm.dat)
class(smpm.dat)
fit <- fit_ssm(smpm.dat, vmax=4, model="crw",time.step=12)
floc <- grab(fit, "f")
floc
points(lat ~ lon, floc, pch=19, cex=0.4, col='red')
fit.crw <- fit_ssm(smpm.dat, vmax=4, model="crw",time.step=12)
floc.crw <- grab(fit.crw, "f")
fit.rw <- fit_ssm(smpm.dat, vmax=4, model="rw",time.step=12)
floc.rw <- grab(fit.rw, "f")
points(lat ~ lon, floc.rw, pch=19.cex=0.4, col='blue')
points(lat ~ lon, floc.rw, pch=19, cex=0.4, col='blue')
plot(fit.crw)
plot(fit.rw)
fit.rw <- fit_ssm(smpm.dat, vmax=3, model="rw",time.step=12)
fit.crw <- fit_ssm(smpm.dat, vmax=3, model="crw",time.step=12)
floc.rw <- grab(fit.rw, "f")
floc.crw <- grab(fit.crw, "f")
plot(lat ~ lon, smpm.dat)
points(lat ~ lon, fit.crw, pch=19, cex=0.3, col='red')
points(lat ~ lon, floc.crw, pch=19, cex=0.3, col='red')
points(lat ~ lon, floc.rw, pch=19, cex=0.3, col='blue')
rw.res <- osar(fit.rw)
crw.res <- osar(fit.crw)
plot(rw.res)
plot(crw.res)
plot(rw.res, type='qq')
plot(crw.res, type='qq')
plot(crw.res, type='ac')
plot(rw.res, type='ac')
plot(crw.res, type='ac')
fit.crw$aic
fit.crw$ssm[[1]]$aic
fit.rw$ssm[[1]]$aic
floc.rw$x - floc.crw$x
hsit(floc.rw$x - floc.crw$x)
hist(floc.rw$x - floc.crw$x)
hist(floc.rw$x - floc.crw$x, breaks = 30)
hist(floc.rw$y - floc.crw$y, breaks = 30)
floc.crw
names(floc.crw)
plot(s ~ date, floc.crw)
plot(s ~ date, floc.crw,type='b')
floc.crw
fmp.crw <- fit_mpm(fit.crw, what="f")
plot(fmp.crw)
fmp.crw
grab(fmp.crw, "f")
grab(fmp.crw, "f") %>% plot(g ~ date, .)
points(g ~ date, smpm, pch=19, cex=0.6,col='red')
grab(fmp.crw, "f") %>% plot(g ~ date, ., ylim=c(0,1))
points(g ~ date, smpm, pch=19, cex=0.6,col='red')
lines(g ~ date, smpm, pch=19, cex=0.6,col='red')
grab(fmp.crw, "f") %>% plot(g ~ date, ., ylim=c(0,1))
lines(g ~ date, smpm, pch=19, cex=0.6,col='red')
grab(fmp.crw, "f") %>% plot(g ~ date, ., ylim=c(0,1), type='l')
lines(g ~ date, smpm, pch=19, cex=0.6,col='red')
smpm
ls()
fmp.rw <- fit_mpm(fit.rw, what = "f")
grab(fmp.rw, "f") %>% lines(g ~ date, ., col = "blue")
fmp.rw
fmp.rw$par
fmp.rw$mpm[[1]]
fmp.rw$mpm[[1]]$par
ls()
?simk
?sim
smpm
plot(smpm)
6*1.2
library(foieGras)
?rgamma
library(foieGras)
library(foieGras)
library(foieGras)
s2crw <- sim(N=1500, ts=3, model="crw", D=c(25,0.5), alpha=c(0.9,0.9), error="kf", tdist = "gamma")
plot(s2crw)
class(s2crw)
is.data.frame(s2crw)
fit_ssm(s2crw %>% mutate(id, date,lc,lon,lat), model="crw",time.step=12)
library(tidyverse)
fit_ssm(s2crw %>% mutate(id, date,lc,lon,lat), model="crw",time.step=12)
fit_ssm(s2crw %>% mutate(id=1) %>% select(id,date,lc,lon,lat), model="crw",time.step=12)
if(!"id" %in% names(s2crw))
()
!"id" %in% names(s2crw)
s2crw$id
s2crw$id <- 1
names(s2crw)
s2crw[, c("id", names(s2crw)[-"id"])]
c("id", names(s2crw)[-"id"])
c("id", names(s2crw))
d?drop
?drop
c("id", names(s2crw)[names(s2crw != "id")])
c("id", names(s2crw)[names(s2crw) != "id"])
s2crw[, c("id", names(s2crw)[names(s2crw) != "id"])]
library(foieGras)
fit_ssm(s2crw %>% select(date,lc,lon,lat), model="crw",time.step=12)
library(foieGras)
fit_ssm(s2crw %>% select(date,lc,lon,lat), model="crw",time.step=12)
class(x)
class(d)
fG_sim
d
d$keep
d
spdf
d.tr <- subset(d, keep)[, c("lon","lat","date","id","lc","smaj","smin",
"eor","lonerr","laterr","keep","obs.type")]
names(d.tr)[1:2] <- c("x","y")
d.tr <- suppressWarnings(trip(d.tr, TORnames = c("date", "id"),
correct_all = FALSE))
?trip
d.tr
trip
trip(d.tr, TORnames=c("date","id"), correct_all = FALSE))
trip(d.tr, TORnames=c("date","id"), correct_all = FALSE)
trip(as.data.frame(d.tr), TORnames=c("date","id"), correct_all = FALSE)
library(foieGras)
library(foieGras)
fit_ssm(s2crw %>% select(date,lc,lon,lat), model="crw",time.step=12)
fit_ssm(s2crw, model="crw",time.step=12)
fit_ssm(s2crw %>% select(date,lc,lon,lat,smaj,smin,eor), model="crw",time.step=12)
fit <- fit_ssm(s2crw %>% select(date,lc,lon,lat,smaj,smin,eor), model="crw",time.step=12)
loc <- grab(fit, "p")
plot(lat ~ lon, s2crw)
points(lat ~ lon, loc, pch=19,cex=0.3, col='red')
points(lat ~ lon, loc, pch=19,cex=0.5, col='red')
plot(lat ~ lon, s2crw, col=grey(0.7))
points(lat ~ lon, loc, pch=19,cex=0.5, col='red')
plot(fit)
plot(fit, "p")
plot(fit, "p", ncol=1,ask= FALSE)
plot(fit, "p", ncol=0,ask= FALSE)
plot(fit, "p", ncol=1,ask= FALSE)
plot(lat ~ date, s2crw)
plot(lat ~ date, s2crw,col=grey(0.7))
points(lat ~ date, loc, pch=19, cex=0.5, col='red')
res <- osar(fit)
res
nrow(loc)
ls()
library(foieGras)
